name: "Check Licenses"
description: "Checks licenses against an allowed list and outputs a report artifact for each project"
inputs:
  allowed_licenses_path:
    required: true
    description: "Path to the allowed licenses JSON file"
  ignored_packages_path:
    required: true
    description: "Path to the ignored packages JSON file"
runs:
  using: "composite"
  steps:
    - name: Install jq
      uses: dcarbone/install-jq-action@f0e10f46ff84f4d32178b4b76e1ef180b16f82c3 #v3.1.1
    - name: Find csproj files
      id: find_projects
      shell: bash
      run: |
        PROJECTS=$(find src -name "*.csproj" -print0 | xargs -0 -n 1)
        echo "PROJECTS=$PROJECTS" >> $GITHUB_ENV
        
        PROJECT_JSON=$(echo "$PROJECTS" | jq --raw-input --slurp --compact-output --raw-output 'split("\n") | map(select(length > 0))' | tr '"' "'")
        echo "PROJECT_JSON=$PROJECT_JSON" >> $GITHUB_ENV
    - name: Check Licenses for each project
      shell: bash
      env:
        ALLOWED_LICENSES_PATH: ${{ inputs.allowed_licenses_path }}
        IGNORED_PACKAGES_PATH: ${{ inputs.ignored_packages_path }}
      run: |
        echo "Projects: $PROJECT_JSON"
        projects=$(echo "$PROJECT_JSON" | jq -r '.[]') #convert json array to bash array
        echo "Found Projects: $projects"
        for project in $projects;
        do
          echo "Checking licenses for: $project"
          projectName=$(basename "$project" .csproj) # Extract project name without .csproj
          output_path="out/${projectName}-licenses.json"
          mkdir -p out
          dotnet tool install --global nuget-license
          PATH=/root/.dotnet/tools:$PATH
          nuget-license --input "$project" \
            --include-shared-projects \
            --output jsonpretty \
            --allowed-license-types "$ALLOWED_LICENSES_PATH" \
            --ignored-packages "$IGNORED_PACKAGES_PATH" \
            --file-output "$output_path"
          echo "License check outputted to $output_path"
        done
    - name: Output Markdown Tables
      shell: bash
      run: |
        projects=$(echo "$PROJECT_JSON" | jq -r '.[]') #convert json array to bash array
        for project in $projects
        do
          projectName=$(basename "$project" .csproj)
          echo "Generating Markdown table for $projectName"
          output_path="out/${projectName}-licenses.json"
          # Generate markdown table for each project
          if [ -f "$output_path" ]; then
            echo "::group::Licenses for $projectName"
            npx --no json-to-markdown-table "$output_path"
            echo "::endgroup::"
          else
            echo "No license file found at $output_path"
          fi
        done
      working-directory: ${{ github.workspace }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: license-reports
        path: out/
