name: merge-checks

on:
  workflow_dispatch:
  workflow_call:
    inputs: 
      allowed_licenses_path:
        required: true
        description: "Path to the allowed licenses JSON file"
        type: string
      ignored_packages_path:
        required: true
        description: "Path to the ignored packages JSON file"
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: semgrep-action
        uses: semgrep/semgrep-action@713efdd345f3035192eaa63f56867b88e63e4e5d #v1
  secrets:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gitleaks/gitleaks:latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: GitLeaks
        shell: bash
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          WORK_DIR="/__w/${{ github.repository_owner }}/${REPO_NAME}"
          CONTAINER_WORK_DIR="/__w/${REPO_NAME}/${REPO_NAME}"
          git config --global --add safe.directory "$WORK_DIR"
          git config --global --add safe.directory "$CONTAINER_WORK_DIR"
          gitleaks detect --verbose
  vulnerabilities:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: '9.x'
      - shell: bash
        name: vulnerable
        run: |
          dotnet restore
          dotnet list package --vulnerable --include-transitive 2>&1 | tee vuln.log
          cat vuln.log >> $GITHUB_STEP_SUMMARY
          
          if grep -iq -w -c "critical\|high\|moderate\|low" vuln.log; then
            COUNT=$(grep -ic -w "critical\|high\|moderate\|low" vuln.log)
            echo "Security: Vulnerabilities found on the log output: $COUNT"
            exit 1
          else
            echo "No vulnerabilities found"
            exit 0
          fi
  outdated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: '9.x'
      - name: Install jq
        uses: dcarbone/install-jq-action@f0e10f46ff84f4d32178b4b76e1ef180b16f82c3 #v3.1.1
      - name: Outdated Tool
        shell: bash
        run: |
          PATH=/root/.dotnet/tools:$PATH
          dotnet tool install --global dotnet-outdated-tool
          
          solution=$(find . -type f -name '*.slnx')
        
          if [[ -z $solution ]]; then
            solution=$(find . -type f -name '*.sln')
          fi
          
          dotnet outdated "${solution}" \
            --output outdated.json \
            --fail-on-updates \
            --version-lock Major
      - shell: bash
        if: failure()
        name: Transform
        run: |
          cat outdated.json | jq '[.Projects[] | {"name": .Name, "package": (.TargetFrameworks[0].Dependencies[] | .Name ), "severity": (.TargetFrameworks[0].Dependencies[] | .UpgradeSeverity ), "latestVersion": (.TargetFrameworks[0].Dependencies[] | .LatestVersion  } ]' > outdatedProjects.json
      - uses: buildingcash/json-to-markdown-table-action@b442169239ef35f1dc4e5c8c3d47686c081a7e65 #v1.1.0
        if: failure()
        name: table
        id: table
        with:
          json_file_path: outdatedProjects.json
  licenses:
    runs-on: ubuntu-latest
    steps:
      - name: Check licenses
        uses: innago-property-management/Oui-DELIVER/.github/actions/check-licenses-action@main
        with:
          allowed_licenses_path: "${{ inputs.allowed_licenses_path }}"
          ignored_packages_path: "${{ inputs.ignored_packages_path }}"
      - name: Upload licenses
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          path: out
          overwrite: 'true'